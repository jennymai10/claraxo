name: CD Pipeline to Google Cloud VM

on:
  push:
    branches:
      - main
      - game/api_integration

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: deployment
    env:
      FRONTEND_IMAGE: "tictactoe/frontend:latest"
      BACKEND_IMAGE: "tictactoe/backend:latest"
      DOCKER_COMPOSE_FILE: "docker-compose.prod.yml"
      GCP_VM_IP: ${{ vars.GCP_VM_IP }}
      GCP_USERNAME: ${{ vars.GCP_USERNAME }}
      GCP_SSH_PRIVATE_KEY: ${{ secrets.GCP_SSH_PRIVATE_KEY }}

    steps:
      # Pre-build Docker cleanup
      - name: Clean up Docker to free space
        run: |
          docker system prune -af
          docker volume prune -f
      
      # Set up SSH Key
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "$GCP_SSH_PRIVATE_KEY" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ls -la ~/.ssh
          ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no $GCP_USERNAME@$claraxo 'echo "SSH connection successful"'
          ssh -o StrictHostKeyChecking=no -i "$HOME/.ssh/deploy_key" $GCP_USERNAME@$claraxo 'echo "SSH connection successful"'


      # Step 1: Check out the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Step 4: Build Docker images for frontend and backend
      - name: Build frontend Docker image
        run: |
          docker build -t $FRONTEND_IMAGE ./tictactoe_project/tictactoe_frontend/tic-tac-toe-frontend
          docker save $FRONTEND_IMAGE > frontend.tar
        shell: bash

      - name: Build backend Docker image
        run: |
          docker build -t $BACKEND_IMAGE ./tictactoe_project
          docker save $BACKEND_IMAGE > backend.tar
        shell: bash

      # Step 5: Copy Docker images and Compose file to VM
      - name: Copy files to VM
        run: |
          scp -o StrictHostKeyChecking=no -i "$HOME/.ssh/deploy_key" frontend.tar $GCP_USERNAME@$GCP_VM_IP:/home/$GCP_USERNAME/
          scp -o StrictHostKeyChecking=no -i "$HOME/.ssh/deploy_key" backend.tar $GCP_USERNAME@$GCP_VM_IP:/home/$GCP_USERNAME/
          scp -o StrictHostKeyChecking=no -i "$HOME/.ssh/deploy_key" $DOCKER_COMPOSE_FILE $GCP_USERNAME@$GCP_VM_IP:/home/$GCP_USERNAME/
      
      # Verify files
      - name: Verify files on VM
        run: |
          ssh -o StrictHostKeyChecking=no -i "$HOME/.ssh/deploy_key" $GCP_USERNAME@$GCP_VM_IP "ls -la /home/$GCP_USERNAME/frontend.tar /home/$GCP_USERNAME/backend.tar /home/$GCP_USERNAME/$DOCKER_COMPOSE_FILE"

      # Step 6: SSH into VM and deploy with Docker Compose
      - name: Deploy on VM
        run: |
          ssh -o StrictHostKeyChecking=no -i "$HOME/.ssh/deploy_key" $GCP_USERNAME@$GCP_VM_IP << EOF
            cd /home/$GCP_USERNAME
            docker load < frontend.tar
            docker load < backend.tar
            docker-compose -f $DOCKER_COMPOSE_FILE up -d --build
          EOF